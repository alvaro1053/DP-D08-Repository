package controllers.admin;



import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import services.AdminService;
import services.AnnouncementService;

import controllers.AbstractController;
import domain.Admin;
import domain.Announcement;
import domain.User;


@Controller
@RequestMapping("announcement/admin")
public class AnnouncementAdminController extends AbstractController {

	
	//Autowired
	@Autowired
	AnnouncementService announcementService;
	
	@Autowired
	AdminService adminService;
	
	//Constructor
	public AnnouncementAdminController(){
		
	}
	
	//Save
	@RequestMapping(value = "/delete", method = RequestMethod.GET)
	public ModelAndView delete(@RequestParam final int AnnouncementId) {
		ModelAndView result;
		Announcement announcement;
		announcement = this.announcementService.findOne(AnnouncementId);
		Boolean SucessDelete;
		Collection<Announcement> announcements;
		
		
			try {
				this.announcementService.delete(announcement);
				SucessDelete = true;
				result = new ModelAndView("announcement/list");
				announcements = this.announcementService.findAll();
				result.addObject("announcements", announcements);
				result.addObject("SucessDelete", SucessDelete);
			} catch (final Throwable oops) {
				announcements = this.announcementService.findAll();
				result = new ModelAndView("announcement/list");
				result.addObject("announcements", announcements);
				result.addObject("message", "announcement.commit.error");
			}
		return result;

	}
	
	//Display
		@RequestMapping(value = "/display", method = RequestMethod.GET)
		public ModelAndView display() {
			ModelAndView result;
			Collection<Announcement> announcements;
			final Admin principal = this.adminService.findByPrincipal();
			Boolean permisos = false;
			announcements = this.announcementService.announcementsChronologicalByUser(principal.getId());
			final String uri = "/admin";

			permisos = true;

			result = new ModelAndView("announcement/display");
			result.addObject("announcements", announcements);
			result.addObject("principal", principal);
			result.addObject("permisos", permisos);
			result.addObject("uri", uri);
			return result;
		}
}
